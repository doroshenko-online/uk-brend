from aiogram import types
from misc import *
from core.Register import Registry


def start_text(chat_id):
    chat_id = str(chat_id)
    text = ''
    user = Registry.get_user(chat_id)
    if user is None:
        text += '–û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ç–æ'

    elif user.isdriver():
        text += '‚¨á –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é'

    else:
        text += '‚¨á –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'

    return text


def start_keyboard(chat_id):
    chat_id = str(chat_id)
    kb = types.ReplyKeyboardMarkup(row_width=1)
    user = Registry.get_user(chat_id)

    if user is None:
        kb.add('üëâ –û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ç–æ')

    elif user.isdriver():
        state_number = user.getstatenumber()
        kb.add('‚Ü™ –í–∫–∞–∑–∞—Ç–∏ —ñ–Ω—à–µ –º—ñ—Å—Ç–æ')
        if state_number == '' or state_number is None:
            kb.add('üõ† –í–∫–∞–∑–∞—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∏–π –Ω–æ–º–µ—Ä –∞–≤—Ç–æ')
        else:
            kb.add('üîÇ –í–∫–∞–∑–∞—Ç–∏ —ñ–Ω—à–∏–π –Ω–æ–º–µ—Ä —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó')
            kb.add('üÜï –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –æ–≥–ª—è–¥')

    elif user.isregionuser():
        kb.add('üëø –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤–æ–¥–∏—Ç–µ–ª–µ–π –ø–æ –≥–æ—Ä–æ–¥—É ' + user.city.name)
        kb.add('üÜï –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Å–º–æ—Ç—Ä')

    elif user.isadmin():
        kb.add('üåÜ –î–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥')
        kb.add('üëÅ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≥–æ—Ä–æ–¥–∞')
        kb.add('üßî –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
        kb.add('üêï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç')

    return kb


def cancel_text_func():
    return "–ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–û—Ç–º–µ–Ω–∞'"


def cancel_text_func_ukr():
    return "–î–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è - –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É ¬´–°–∫–∞—Å—É–≤–∞—Ç–∏¬ª –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å /cancel"


def cancel_keyboard():
    kb = types.ReplyKeyboardMarkup(row_width=1)
    kb.add('–û—Ç–º–µ–Ω–∞')
    return kb


def cancel_keyboard_ukr():
    kb = types.ReplyKeyboardMarkup(row_width=1)
    kb.add('–°–∫–∞—Å—É–≤–∞—Ç–∏')
    return kb


def confirm_keyboard():
    kb = types.ReplyKeyboardMarkup(row_width=2)
    kb.row('‚úÖ –î–∞', 'üõë –ù–µ—Ç')
    kb.add('–û—Ç–º–µ–Ω–∞')
    return kb


def confirm_keyboard_ukr():
    kb = types.ReplyKeyboardMarkup(row_width=2)
    kb.row('‚úÖ –¢–∞–∫', 'üõë –ù—ñ')
    kb.add('–°–∫–∞—Å—É–≤–∞—Ç–∏')
    return kb


def city_inline_keyboard(admin=False):
    kb = types.InlineKeyboardMarkup(row_width=1)
    if admin:
        for city_id, city in Registry.cities.items():
            kb.add(types.InlineKeyboardButton(city.name, callback_data=f'show_city_id:{city_id}'))
    else:
        for city_id, city in Registry.cities.items():
            kb.add(types.InlineKeyboardButton(city.name, callback_data=f'city_id:{city_id}'))

    return kb


def change_city_inline_keyboard(city_id):
    kb = types.InlineKeyboardMarkup()
    for cid, city in Registry.cities.items():
        if cid == city_id:
            kb.add(types.InlineKeyboardButton(city.name, callback_data=f'selected_show_city_id:{city_id}'))
            inline_btn1 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ', callback_data=f'change_city_name:{cid}')
            inline_btn2 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —É–∫—Ä–∞–∏–Ω—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ', callback_data=f'change_city_ukr_name:{cid}')
            inline_btn3 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å id –ø–∞–ø–∫–∏', callback_data=f'change_city_dir_id:{cid}')
            kb.add(inline_btn1, inline_btn2, inline_btn3)
        else:
            kb.add(types.InlineKeyboardButton(city.name, callback_data=f'show_city_id:{city_id}'))

    return kb


def get_blocked_drivers_kb_and_text(user):
    result = user.get_blocked_users()
    text = ''
    if not result:
        text += "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç"
        kb = start_keyboard(user.chat_id)
        yield text, kb,
    else:
        for driver in result:
            yield "Username: @{0} | –ì–æ—Å. –Ω–æ–º–µ—Ä: {1}".format(driver[1], driver[2]), types.InlineKeyboardMarkup().add(types.InlineKeyboardButton('–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'unblock_driver:{driver[0]}'))
